{"ast":null,"code":"var _jsxFileName = \"E:\\\\PROGRAMING\\\\HTML CSS  JAVA SCRIPT\\\\PROJECTS\\\\4_\\\\instaprints\\\\src\\\\Components\\\\Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Typography, Button, Grid, Checkbox, TextField, OutlinedInput, FormControl, InputLabel, InputAdornment, IconButton } from \"@material-ui/core\";\nimport Show from '@material-ui/icons/Visibility';\nimport Hide from '@material-ui/icons/VisibilityOff';\nimport SharpIcon from '@material-ui/icons/SendSharp';\nimport BlockIcon from '@material-ui/icons/BlockSharp';\nimport { makeStyles } from '@material-ui/core/styles';\nimport '../CSS/Login.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Style = makeStyles({\n  btn: {\n    margin: \"0.5rem 0\",\n    width: \"100%\",\n    background: \"red\",\n    height: \"3rem\",\n    color: \"#fff\",\n    \"&:hover\": {\n      color: \"red\",\n      transition: \".5s ease-in-out\"\n    }\n  },\n  disbtn: {\n    background: \"rgb(0,0,0, 0.38)\",\n    width: \"100%\",\n    height: \"3rem\"\n  },\n  error: {\n    color: \"red\",\n    width: \"100%\",\n    textAlign: \"center\",\n    fontSize: \"smaller\"\n  }\n});\n\nconst Login = () => {\n  _s();\n\n  const classes = Style();\n  const [enteredData, updateEnteredData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [error, updateError] = useState({\n    emailError: \"\",\n    passwordError: \"\"\n  });\n\n  const enteringData = event => {\n    const {\n      value,\n      name\n    } = event.target;\n\n    switch (name) {\n      case \"email\":\n        updateEnteredData(preValue => {\n          return { ...preValue,\n            [name]: value\n          };\n        });\n\n        if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(enteredData.email)) {\n          updateError(preValue => {\n            return { ...preValue,\n              emailError: \"\"\n            };\n          });\n        } else {\n          updateError(preValue => {\n            return { ...preValue,\n              emailError: \"Invalid Email\"\n            };\n          });\n        }\n\n        break;\n\n      case \"password\":\n        updateEnteredData(preValue => {\n          return { ...preValue,\n            [name]: value\n          };\n        });\n\n        if (!enteredData.password || enteredData.password.length < 8) {\n          updateError(preValue => {\n            return { ...preValue,\n              passwordError: \"Password Must be more than 8 Character\"\n            };\n          });\n        } else {\n          updateError(preValue => {\n            return { ...preValue,\n              passwordError: \"\"\n            };\n          });\n        }\n\n      default:\n        break;\n    }\n\n    console.log(value);\n  };\n\n  const [showPV, updateShowPV] = useState({\n    showP: false\n  });\n\n  const clickShowP = () => {\n    updateShowPV({\n      showP: !showPV.showP\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login_box\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            style: {\n              textAlign: \"center\"\n            },\n            children: \"LOG-IN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"login_form\",\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Emial\",\n              name: \"email\",\n              variant: \"outlined\",\n              onChange: enteringData,\n              style: {\n                margin: \".5rem 0\",\n                width: \"100%\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.error,\n              children: [\" \", error.emailError, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              variant: \"outlined\",\n              style: {\n                margin: \".5rem 0\",\n                width: \"100%\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                name: \"password\",\n                type: showPV.showP ? \"text\" : \"password\",\n                onChange: enteringData,\n                labelWidth: 70,\n                endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"end\",\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    edge: \"end\",\n                    onClick: clickShowP,\n                    children: showPV.showP ? /*#__PURE__*/_jsxDEV(Show, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 155,\n                      columnNumber: 41\n                    }, this) : /*#__PURE__*/_jsxDEV(Hide, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 155,\n                      columnNumber: 52\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.error,\n              children: [\" \", error.passwordError, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this), enteredData.email && enteredData.password && !error.emailError && !error.passwordError ? /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              type: \"submit\",\n              endIcon: /*#__PURE__*/_jsxDEV(SharpIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 28\n              }, this),\n              className: classes.btn,\n              children: \"LOG IN\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              disabled: true,\n              endIcon: /*#__PURE__*/_jsxDEV(BlockIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 28\n              }, this),\n              className: classes.btn,\n              children: \"LOG IN\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signup_btn_container\",\n        children: \"Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Login, \"/jXEVkM8fKEvFF3PuXWBMh2/jB4=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["E:/PROGRAMING/HTML CSS  JAVA SCRIPT/PROJECTS/4_/instaprints/src/Components/Login.jsx"],"names":["React","useState","Typography","Button","Grid","Checkbox","TextField","OutlinedInput","FormControl","InputLabel","InputAdornment","IconButton","Show","Hide","SharpIcon","BlockIcon","makeStyles","Style","btn","margin","width","background","height","color","transition","disbtn","error","textAlign","fontSize","Login","classes","enteredData","updateEnteredData","email","password","updateError","emailError","passwordError","enteringData","event","value","name","target","preValue","test","length","console","log","showPV","updateShowPV","showP","clickShowP"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Typography, Button, Grid, Checkbox, TextField, OutlinedInput,\r\n  FormControl, InputLabel, InputAdornment, IconButton\r\n} from \"@material-ui/core\";\r\nimport Show from '@material-ui/icons/Visibility';\r\nimport Hide from '@material-ui/icons/VisibilityOff';\r\nimport SharpIcon from '@material-ui/icons/SendSharp';\r\nimport BlockIcon from '@material-ui/icons/BlockSharp';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport '../CSS/Login.scss';\r\n\r\nconst Style = makeStyles({\r\n  btn: {\r\n    margin: \"0.5rem 0\",\r\n    width: \"100%\",\r\n    background: \"red\",\r\n    height: \"3rem\",\r\n    color: \"#fff\",\r\n    \"&:hover\": {\r\n      color: \"red\",\r\n      transition: \".5s ease-in-out\"\r\n    }\r\n  },\r\n  disbtn: {\r\n    background: \"rgb(0,0,0, 0.38)\",\r\n    width: \"100%\",\r\n    height: \"3rem\"\r\n  },\r\n  error: {\r\n    color: \"red\",\r\n    width: \"100%\",\r\n    textAlign: \"center\",\r\n    fontSize: \"smaller\"\r\n\r\n  }\r\n})\r\n\r\nconst Login = () => {\r\n  const classes = Style();\r\n\r\n  const [enteredData, updateEnteredData] = useState({\r\n    email: \"\",\r\n    password: \"\"\r\n  })\r\n\r\n  const [error, updateError] = useState({\r\n    emailError: \"\",\r\n    passwordError: \"\"\r\n  })\r\n\r\n\r\n  const enteringData = (event) => {\r\n    const { value, name } = event.target;\r\n\r\n    switch (name) {\r\n      case \"email\":\r\n        updateEnteredData((preValue) => {\r\n          return {\r\n            ...preValue,\r\n            [name]: value\r\n          }\r\n        })\r\n\r\n        if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(enteredData.email)) {\r\n          updateError((preValue) => {\r\n            return {\r\n              ...preValue,\r\n              emailError: \"\"\r\n            }\r\n          })\r\n        } else {\r\n          updateError((preValue) => {\r\n            return {\r\n              ...preValue,\r\n              emailError: \"Invalid Email\"\r\n            }\r\n          })\r\n        }\r\n\r\n        break;\r\n\r\n      case \"password\":\r\n        updateEnteredData((preValue) => {\r\n          return {\r\n            ...preValue,\r\n            [name]: value\r\n          }\r\n        })\r\n\r\n        if (!enteredData.password || enteredData.password.length < 8) {\r\n          updateError((preValue) => {\r\n            return {\r\n              ...preValue,\r\n              passwordError: \"Password Must be more than 8 Character\"\r\n            }\r\n          })\r\n        } else {\r\n          updateError((preValue) => {\r\n            return {\r\n              ...preValue,\r\n              passwordError: \"\"\r\n            }\r\n          })\r\n        }\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    console.log(value)\r\n  }\r\n\r\n  const [showPV, updateShowPV] = useState({\r\n    showP: false\r\n  })\r\n\r\n  const clickShowP = () => {\r\n    updateShowPV({\r\n      showP: !showPV.showP\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"login_container\">\r\n        <div className=\"login\">\r\n          <div className=\"login_box\">\r\n            <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\r\n              LOG-IN\r\n            </Typography>\r\n            <form className=\"login_form\">\r\n              <TextField\r\n                label=\"Emial\"\r\n                name=\"email\"\r\n                variant=\"outlined\"\r\n                onChange={enteringData}\r\n                style={{ margin: \".5rem 0\", width: \"100%\" }}\r\n              />\r\n\r\n              <Typography className={classes.error}> {error.emailError} </Typography>\r\n\r\n              <FormControl variant=\"outlined\" style={{ margin: \".5rem 0\", width: \"100%\" }}>\r\n                <InputLabel>Password</InputLabel>\r\n                <OutlinedInput\r\n                  name=\"password\"\r\n                  type={showPV.showP ? \"text\" : \"password\"}\r\n                  onChange={enteringData}\r\n                  labelWidth={70}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton edge=\"end\" onClick={clickShowP}>\r\n                        {showPV.showP ? <Show /> : <Hide />}\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n\r\n                />\r\n              </FormControl>\r\n\r\n              <Typography className={classes.error}> {error.passwordError} </Typography>\r\n\r\n              {\r\n                enteredData.email &&\r\n                enteredData.password &&\r\n                !error.emailError &&\r\n                !error.passwordError \r\n                ?\r\n                <Button\r\n                  variant=\"contained\"\r\n                  type=\"submit\"\r\n                  endIcon={<SharpIcon/>}\r\n                  className={classes.btn}\r\n                >\r\n                  LOG IN\r\n                </Button>\r\n                :\r\n                <Button\r\n                  variant=\"contained\"\r\n                  disabled\r\n                  endIcon={<BlockIcon/>}\r\n                  className={classes.btn}\r\n                >\r\n                  LOG IN\r\n                </Button>\r\n              }\r\n\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <div className=\"signup_btn_container\">\r\n          Signup\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n};\r\n\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}