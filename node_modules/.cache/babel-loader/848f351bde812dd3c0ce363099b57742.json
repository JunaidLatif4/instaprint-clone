{"ast":null,"code":"var _jsxFileName = \"E:\\\\PROGRAMING\\\\HTML CSS  JAVA SCRIPT\\\\PROJECTS\\\\4_\\\\instaprints\\\\src\\\\Components\\\\SignUp.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Typography, Button, Grid, Checkbox, TextField, OutlinedInput, FormControl, InputLabel, InputAdornment, IconButton } from \"@material-ui/core\";\nimport Show from '@material-ui/icons/Visibility';\nimport Hide from '@material-ui/icons/VisibilityOff';\nimport SharpIcon from '@material-ui/icons/SendSharp';\nimport IntlTelInput from 'react-intl-tel-input';\nimport \"react-intl-tel-input/dist/main.css\";\nimport { makeStyles } from '@material-ui/core/styles'; // CSS :\n\nimport \"../CSS/SignUp.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Style = makeStyles({\n  btn: {\n    width: \"100%\",\n    background: \"red\",\n    height: \"3rem\",\n    color: \"#fff\",\n    \"&:hover\": {\n      color: \"red\"\n    }\n  }\n});\n\nconst SignUp = () => {\n  _s();\n\n  const classes = Style(); // Form Data Control :\n\n  const [enteredData, updateEnteredData] = useState({\n    firstname: \"\",\n    lastname: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const [error, updateError] = useState({\n    firstnameError: \"\",\n    lastnameError: \"\",\n    emailError: \"\",\n    passwordError: \"\",\n    confirmPasswordError: \"\"\n  });\n\n  const enteringData = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    updateEnteredData(preValue => {\n      return { ...preValue,\n        [name]: value\n      };\n    });\n\n    if (!enteredData.firstname && enteredData.firstname.length < 3) {\n      updateError(preValue => {\n        return { ...preValue,\n          firstnameError: \"First Name Must be more than 3 Characters\"\n        };\n      });\n    }\n\n    console.log(enteredData);\n  }; // Show Hide Password :\n\n\n  const [showPV, updateShowPV] = useState({\n    showP: false\n  });\n  const [showCPV, updateShowCPV] = useState({\n    showCP: false\n  });\n\n  const clikShowP = () => {\n    updateShowPV({\n      showP: !showPV.showP\n    });\n  };\n\n  const clikShowCP = () => {\n    updateShowCPV({\n      showCP: !showCPV.showCP\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup_container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signup_box\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"SIGN-UP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"First Name\",\n          variant: \"outlined\",\n          name: \"firstname\",\n          onChange: enteringData,\n          style: {\n            margin: \"1rem 0\",\n            width: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Last Name\",\n          variant: \"outlined\",\n          name: \"lastname\",\n          onChange: enteringData,\n          style: {\n            width: \"100%\",\n            marginBottom: \"1rem\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IntlTelInput, {\n          preferredCountries: [\"pk\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Email\",\n          variant: \"outlined\",\n          name: \"email\",\n          onChange: enteringData,\n          style: {\n            width: \"100%\",\n            marginTop: \"1rem\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          style: {\n            margin: \"1rem 0\",\n            width: \"100%\"\n          },\n          variant: \"outlined\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n            name: \"password\",\n            onChange: enteringData,\n            type: showPV.showP ? \"text\" : \"password\",\n            labelWidth: 70,\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                edge: \"end\",\n                onClick: clikShowP,\n                children: showPV.showP ? /*#__PURE__*/_jsxDEV(Show, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 37\n                }, this) : /*#__PURE__*/_jsxDEV(Hide, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 48\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          style: {\n            margin: \"1rem 0\",\n            width: \"100%\"\n          },\n          variant: \"outlined\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n            name: \"confirmPassword\",\n            onChange: enteringData,\n            type: showCPV.showCP ? \"text\" : \"password\",\n            labelWidth: 130,\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                edge: \"end\",\n                onClick: clikShowCP,\n                children: showCPV.showCP ? /*#__PURE__*/_jsxDEV(Show, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 39\n                }, this) : /*#__PURE__*/_jsxDEV(Hide, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 50\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          type: \"submit\",\n          endIcon: /*#__PURE__*/_jsxDEV(SharpIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 22\n          }, this),\n          className: classes.btn,\n          children: \"SIGN UP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignUp, \"pBlG7cKQeHp3k6Qq58WqOKsob7o=\");\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["E:/PROGRAMING/HTML CSS  JAVA SCRIPT/PROJECTS/4_/instaprints/src/Components/SignUp.jsx"],"names":["React","useState","Typography","Button","Grid","Checkbox","TextField","OutlinedInput","FormControl","InputLabel","InputAdornment","IconButton","Show","Hide","SharpIcon","IntlTelInput","makeStyles","Style","btn","width","background","height","color","SignUp","classes","enteredData","updateEnteredData","firstname","lastname","email","password","confirmPassword","error","updateError","firstnameError","lastnameError","emailError","passwordError","confirmPasswordError","enteringData","event","value","name","target","preValue","length","console","log","showPV","updateShowPV","showP","showCPV","updateShowCPV","showCP","clikShowP","clikShowCP","textAlign","margin","marginBottom","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Typography, Button, Grid, Checkbox, TextField, OutlinedInput,\r\n  FormControl, InputLabel, InputAdornment, IconButton\r\n} from \"@material-ui/core\"\r\nimport Show from '@material-ui/icons/Visibility';\r\nimport Hide from '@material-ui/icons/VisibilityOff';\r\nimport SharpIcon from '@material-ui/icons/SendSharp';\r\n\r\nimport IntlTelInput from 'react-intl-tel-input';\r\nimport \"react-intl-tel-input/dist/main.css\"\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n// CSS :\r\nimport \"../CSS/SignUp.scss\";\r\n\r\nconst Style = makeStyles({\r\n  btn:{\r\n    width:\"100%\",\r\n    background: \"red\",\r\n    height:\"3rem\",\r\n    color:\"#fff\",\r\n    \"&:hover\":{\r\n      color: \"red\"\r\n    }\r\n  }\r\n})\r\n\r\n\r\nconst SignUp = () => {\r\n  const classes = Style();\r\n\r\n  // Form Data Control :\r\n  const [enteredData , updateEnteredData] = useState({\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\"\r\n  })\r\n  const [error , updateError] = useState({\r\n    firstnameError: \"\",\r\n    lastnameError: \"\",\r\n    emailError: \"\",\r\n    passwordError: \"\",\r\n    confirmPasswordError: \"\"\r\n  })\r\n\r\n  const enteringData = (event)=>{\r\n    const {value , name} = event.target;\r\n\r\n    updateEnteredData((preValue)=>{\r\n      return{\r\n        ...preValue,\r\n        [name]:value\r\n      }\r\n    })\r\n\r\n    if(!enteredData.firstname && enteredData.firstname.length < 3){\r\n        updateError((preValue)=>{\r\n          return{\r\n            ...preValue,\r\n            firstnameError: \"First Name Must be more than 3 Characters\"\r\n          }\r\n        })\r\n    }\r\n\r\n    console.log(enteredData)\r\n\r\n  }\r\n\r\n  // Show Hide Password :\r\n  const [showPV, updateShowPV] = useState({\r\n    showP: false\r\n  })\r\n  const [showCPV, updateShowCPV] = useState({\r\n    showCP: false\r\n  })\r\n\r\n  const clikShowP = () => {\r\n    updateShowPV({\r\n      showP: !showPV.showP\r\n    })\r\n  }\r\n  const clikShowCP = () => {\r\n    updateShowCPV({\r\n      showCP: !showCPV.showCP\r\n    })\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"signup_container\">\r\n      <div className=\"signup_box\">\r\n        <Typography variant=\"h5\" style={{ textAlign: \"center\" }}>\r\n          SIGN-UP\r\n        </Typography>\r\n\r\n        <form className=\"form\">\r\n          <TextField\r\n            label=\"First Name\"\r\n            variant=\"outlined\"\r\n            name=\"firstname\"\r\n            onChange={enteringData}\r\n            style={{ margin: \"1rem 0\", width: \"100%\" }}\r\n          />\r\n          <TextField\r\n            label=\"Last Name\"\r\n            variant=\"outlined\"\r\n            name=\"lastname\"\r\n            onChange={enteringData}\r\n            style={{ width: \"100%\" , marginBottom:\"1rem\"}}\r\n          />\r\n\r\n          <IntlTelInput\r\n            preferredCountries={[\"pk\"]}\r\n          />\r\n\r\n          <TextField\r\n            label=\"Email\"\r\n            variant=\"outlined\"\r\n            name=\"email\"\r\n            onChange={enteringData}\r\n            style={{ width: \"100%\" , marginTop:\"1rem\"}}\r\n          />\r\n\r\n          <FormControl style={{ margin: \"1rem 0\", width: \"100%\" }} variant=\"outlined\">\r\n            <InputLabel>Password</InputLabel>\r\n            <OutlinedInput\r\n              name=\"password\"\r\n              onChange={enteringData}\r\n              type={showPV.showP ? \"text\" : \"password\"}\r\n              labelWidth={70}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton edge=\"end\" onClick={clikShowP}>\r\n                    {showPV.showP ? <Show /> : <Hide />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n            />\r\n\r\n          </FormControl>\r\n          <FormControl style={{ margin: \"1rem 0\", width: \"100%\" }} variant=\"outlined\">\r\n            <InputLabel>Confirm Password</InputLabel>\r\n            <OutlinedInput\r\n              name=\"confirmPassword\"\r\n              onChange={enteringData}\r\n              type={showCPV.showCP ? \"text\" : \"password\"}\r\n              labelWidth={130}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton edge=\"end\" onClick={clikShowCP}>\r\n                    {showCPV.showCP ? <Show /> : <Hide />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n            />\r\n\r\n          </FormControl>\r\n\r\n          <Button\r\n            variant=\"contained\"\r\n            type=\"submit\"\r\n            endIcon={<SharpIcon/>}\r\n            className={classes.btn}\r\n          >\r\n            SIGN UP\r\n          </Button>\r\n\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignUp\r\n"]},"metadata":{},"sourceType":"module"}